@import url("https://fonts.cdnfonts.com/css/inter");

html {
  font-family: "Inter", sans-serif;
  /* Created with https://www.css-gradient.com */
  background: #df39e8;
  background: -webkit-radial-gradient(top left, #df39e8, #f23321);
  background: -moz-radial-gradient(top left, #df39e8, #f23321);
  background: radial-gradient(to bottom right, #df39e8, #f23321);
  color: #f0f8ff;
  padding: 1.5rem;
  line-height: 1.5rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

html::after {
  font-size: 0.75rem;
  display: flex;
  max-width: 400px;
  justify-content: center;
  white-space: pre-wrap;
  content: "Brought to you by Jedrzej Pawel Maczan - https://maczan.pl \A\A PS. This link won't work :) it's only one of multiple limitations of this trickery that I didn't manage to work around. If you figure it out, please let me know at jedrzejpawel@maczan.pl";
  font-weight: 700;
}

head {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 1000px;
}

head::before {
  content: "What you can do with 35 bytes of HTML and a single CSS file?";
  font-size: 2rem;
  margin-bottom: 3rem;
  display: flex;
  justify-content: center;
  font-weight: 500;
}

head::after {
  content: "\A \A";
  background-image: url("https://picsum.photos/200");
  height: 200px;
  width: 200px;
}

link {
  display: block;
  margin-bottom: 1rem;
}

link:before {
  white-space: pre-wrap;
  content: "You can:";
  font-weight: 600;
  font-size: 1.5rem;
  display: flex;
  justify-content: center;
}

link::after {
  white-space: pre-wrap;
  content: "\A- Dynamically print name of linked CSS file which in our case is just '" attr(href) "' \A \A- Write multiple line strings \A like \Athis one.\A \A- Include fonts from CDNs like this nice looking Inter font.\A \A- Render SVGs like this one " url("data:image/svg+xml;%20charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20220.18%20210.78%22%20height%3D%2260%22%20width%3D%2260%22%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22linear-gradient%22%20x1%3D%22-3081.33%22%20y1%3D%22-468.52%22%20x2%3D%22-2883.16%22%20y2%3D%22-468.52%22%20gradientTransform%3D%22rotate%2890%20-1726.08%201367.48%29%22%20gradientUnits%3D%22userSpaceOnUse%22%3E%3Cstop%20offset%3D%220%22%20stop-color%3D%22%23efa6c2%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-color%3D%22%2396cdbd%22%2F%3E%3C%2FlinearGradient%3E%3Cstyle%3E.cls-3%7Bfill%3A%239faed0%7D.cls-3%2C.cls-6%2C.cls-7%7Bstroke%3A%23212683%3Bstroke-miterlimit%3A10%3Bstroke-width%3A6px%7D.cls-4%7Bfill%3A%23212683%7D.cls-6%7Bfill%3A%23cec09f%7D.cls-7%7Bfill%3Anone%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20style%3D%22isolation%3Aisolate%22%3E%3Cg%20id%3D%22Layer_2%22%20data-name%3D%22Layer%202%22%3E%3Cg%20id%3D%22Layer_1-2%22%20data-name%3D%22Layer%201%22%3E%3Cpath%20d%3D%22M153.78%20210.39A66%2066%200%200%200%20211%20111.31%2066.05%2066.05%200%201%200%2093.57%2051.12a66.06%2066.06%200%201%200-.1%20120.15%2066.05%2066.05%200%200%200%2060.31%2039.12z%22%20style%3D%22opacity%3A.4%3Bmix-blend-mode%3Amultiply%3Bfill%3Aurl%28%23linear-gradient%29%22%2F%3E%3Crect%20class%3D%22cls-3%22%20x%3D%2229.35%22%20y%3D%2249.96%22%20width%3D%22174.71%22%20height%3D%2225.81%22%20rx%3D%229.71%22%20ry%3D%229.71%22%2F%3E%3Cpath%20class%3D%22cls-3%22%20d%3D%22M126.73%20184.78h67.63a9.71%209.71%200%200%200%209.71-9.71v-6.39a9.71%209.71%200%200%200-9.71-9.71H39.06a9.71%209.71%200%200%200-9.71%209.71v6.39a9.71%209.71%200%200%200%209.71%209.71h67.63%22%2F%3E%3Cpath%20class%3D%22cls-4%22%20d%3D%22M29.79%2019.62H27v-2.75a3.4%203.4%200%200%200-6.79%200v2.76h-2.73a3.4%203.4%200%200%200%200%206.79h2.76v2.76a3.4%203.4%200%200%200%206.79%200v-2.76h2.76a3.4%203.4%200%200%200%200-6.79zM216.79%2019.62H214v-2.75a3.4%203.4%200%200%200-6.79%200v2.76h-2.76a3.4%203.4%200%200%200%200%206.79h2.76v2.76a3.4%203.4%200%200%200%206.79%200v-2.76h2.76a3.4%203.4%200%200%200%200-6.79zM46.91%20197.84h-2.76v-2.76a3.4%203.4%200%200%200-6.79%200v2.76H34.6a3.4%203.4%200%200%200%200%206.79h2.76v2.76a3.4%203.4%200%200%200%206.79%200v-2.76h2.76a3.4%203.4%200%200%200%200-6.79z%22%2F%3E%3Cpath%20style%3D%22fill%3A%23a8dedb%3Bstroke%3A%231f2687%3Bstroke-miterlimit%3A10%3Bstroke-width%3A6px%22%20d%3D%22M40.75%2075.77h151.91v83.2H40.75z%22%2F%3E%3Crect%20class%3D%22cls-6%22%20x%3D%2293.39%22%20y%3D%2298.88%22%20width%3D%2210.9%22%20height%3D%2218.75%22%20rx%3D%225.45%22%20ry%3D%225.45%22%2F%3E%3Crect%20class%3D%22cls-6%22%20x%3D%22129.13%22%20y%3D%2298.88%22%20width%3D%2210.9%22%20height%3D%2218.75%22%20rx%3D%225.45%22%20ry%3D%225.45%22%2F%3E%3Crect%20class%3D%22cls-6%22%20x%3D%22111.26%22%20y%3D%2288.25%22%20width%3D%2210.9%22%20height%3D%2218.75%22%20rx%3D%225.45%22%20ry%3D%225.45%22%2F%3E%3Cpath%20class%3D%22cls-6%22%20d%3D%22m132.18%20135.43-6.08-10.53a10.84%2010.84%200%200%200-18.78%200l-6.08%2010.53-.11.2c-3.34%206.05%203.31%2012.53%209.48%209.42a13.59%2013.59%200%200%201%2012.2%200c6.17%203.11%2012.82-3.37%209.48-9.42z%22%2F%3E%3Ccircle%20class%3D%22cls-4%22%20cx%3D%22116.71%22%20cy%3D%22184.78%22%20r%3D%222.69%22%2F%3E%3Cpath%20class%3D%22cls-7%22%20d%3D%22M156.86%20131.3v15.83M166.53%20131.3v6.08M166.53%20140.38v6.09M176.2%20131.3v15.83%22%2F%3E%3Cpath%20class%3D%22cls-3%22%20d%3D%22M162%203a20%2020%200%200%201%2020%2020v27h-40V23a20%2020%200%200%201%2020-20z%22%2F%3E%3Cpath%20class%3D%22cls-7%22%20d%3D%22M161.71%2028.21a10.51%2010.51%200%200%201%206.71%202.41%201.86%201.86%200%200%200%202.88-.62%2010.49%2010.49%200%200%200%201-4%2010.56%2010.56%200%201%200-21.11-.41%2010.51%2010.51%200%200%200%201%204.42%201.86%201.86%200%200%200%202.88.66%2010.51%2010.51%200%200%201%206.64-2.46zM62.53%2075.77v34.11M62.53%20113.88v7.75%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E") "\A\A- Render text of any length you wish and apply any styling. \A\A- Render images from the Internet, like this random image below"
}

body::before {
  content: "\A\A\A How's that possible?:";
  display: flex;
  justify-content: center;
  margin-bottom: 1rem;
  font-weight: 600;
  white-space: pre-wrap;
  font-size: 1.3rem;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 1000px;
  margin: 0;
}

body::after {
  content: "- Your browser attempts to parse index.html as an correct HTML file, regardless of not having valid HTML file structure. It recognizes <link> tag as a tag designed for <head> section. It builds the correct minimal HTML file structure, containing <html><head><body> structure. Then, it puts our <link> inside <head> tag.\A\A- Good news, since we received many tags for free, we are able to put content in our site. Literally, the _content_. We utilize 'content' property of CSS, in order to render text, images and SVGs. We can't use 'content' property in tags directly, but we need to put it in ::before and ::after pseudo-elements. Having <link> and additional <html><head><body> tags, we got overall 8 content holders in our page - one ::before and one ::after per tag. Now it's the time to use them.\A\A- Images don't require <img /> tag. We can put them on website using 'background-image' property and pass link to the image with 'url();'.\A\A- SVGs might be rendered with 'content' property as well: 'content: url('data:image/svg+xml;%20charset=utf8,*url encoded svg here*);'\A\A- Rendering text is simple as 'content: 'any text';'\A\A- Fonts might be included with regular CSS import - in case of this site it's '@import url('http://fonts.cdnfonts.com/css/inter');'\A\A- <link> and <head> tags are not visible by default. In order to make their 'content' visually visible, you need to change their 'display' property, to any value that fits your needs. I have used 'flex' and 'block' here.\A\A- Dynamically rendered content, like printing the name of included css file, is possible thanks to 'content: attr(name-of-attribute)'. You can put this inside - for example - 'link::before {}', replacing 'name-of-attribute' with 'href', in order to get value of 'href'. You can even define your own attributes.\A\A- Multiple line strings are possible thanks to '\\A' inside 'content: 'text \\A';'. It won't work by default though. You have to put 'white-space: pre-wrap;' property in corresponding tag.\A\A- In order to save some more bytes, you can trim the <link> tag inside HTML file. It's possible to remove all whitespaces between attributes and end of the tag. The only whitespace that is necessary is the one after 'link' tag name. Then, you can pick the shortest possible name for CSS file. Your CSS file is parsed properly having just the extension - '.css' as a name, so we can rename our CSS file like this.\A\A- Unfortunately, in case of this site deployed on Netlify, '.css' file is not recognized correctly, so I had to add a single character to '.css' so it became 'n.css', making the index.html file _bloated_ to 36 bytes, despite promising 35 bytes in heading. Sorry! Kudos to you if you caught it up before reading this paragraph. \A\A \A\AShould you build your website this way?\A\AI think NOT. There might be some advantages in narrow range of cases, like making life harder to web crawlers. But the main reason not to write websites like this is an accessibility. Screen readers are likely not to parse these websites correctly - the content won't be read to users.\A\A\A And that's all. Thanks for reading! Sorry if the explanations above weren't clear enough - in such case I suggest checking out the content of both HTML and CSS files using Developer Tools in your browser - it typically opens with F12.\A\A";
  white-space: pre-wrap;
}
